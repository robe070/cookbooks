parameters:
  - name: stageName
    type: string
    default: none
  - name: stageDisplayname
    type: string
    default: none
  - name: dependsOn
    default: []
  - name: jobName
    type: string
    default: none
  - name: jobDisplayname
    type: string
    default: none
  - name: vmImage
    type: string
    default: Windows-2022
  - name: resourceGroup
    type: string
    default: none
  - name: version
    type: string
    default: none
  - name: osName
    type: string
    default: "$(Gate.VersionClean)"
  - name: lansaVersion
    type: string
    default: none 
  - name: imageId
    type: string
    default: "$(Gate.ImageUrl)"
  - name: imageSource
    type: string
    default: Custom
  - name: msiURL
    type: string
    default: none
  - name: stackName
    type: string
    default: "$(Gate.VersionClean)"
  - name: jobcondition
    type: string
    default: none
  - name: Collation_JPN
    type: string
    default: $(Collation_JPN)

stages:
  - stage: ${{ parameters.stageName }}
    dependsOn: ${{ parameters.dependsOn }}
    displayName: ${{ parameters.stageDisplayname }}
    jobs:
    - job: ${{ parameters.jobName }}
      timeoutInMinutes: 120
      cancelTimeoutInMinutes: 1
      condition: ${{ parameters.jobcondition}}
      displayName: ${{ parameters.jobDisplayname }}

      pool:
        vmImage: ${{ parameters.vmImage }}

      variables:
        - name: ConnectedServiceName
          value: 'Azure Baking Images'
        - name: Collation_JPN
          ${{ if contains( parameters.osName, 'JPN' ) }}: 
            value: -collation $(Collation_JPN)
          ${{ else }}:
            value: ''

      steps:
      - download: _BuildImageReleaseArtefacts
        # displayName: Downloading latest artefacts from Build Image Release Artefacts 3.0

      - checkout: _lansa_azure_quickstart_templates
        path: _lansa_azure_quickstart_templates
 
      # - checkout: _robe070_cookbooks
      #   path: _robe070_cookbooks

      # - repository: _robe070_cookbooks
      #   type: github
      #   endpoint: debjitbhowmik807
      #   name: debjitbhowmik807/cookbooks
      #   ref: Feature/Image-Release-Debjit
      
      - checkout: self # Checking out self (and calling it _robe070_cookbooks) because the original _robe070_cookbooks does not have the latests changes needed for the pipeline to run
        path: _robe070_cookbooks

      - task: PowerShell@2
        displayName: 'Artifact Check: Set Gate Variable'
        name: Gate
        inputs:
          targetType: filePath
          filePath: '$(Pipeline.Workspace)/_robe070_cookbooks/scripts/azure_set_gate_variable.ps1'
          arguments: -Version "${{ parameters.version }}" -osName "${{ parameters.osName }}"

      - powershell: |
          # Print the Gate variables.
          Write-Host "Gate.IsEnabled: $(Gate.IsEnabled); Gate.ImageUrl: $(Gate.ImageUrl) Gate.Sku: $(Gate.Sku)" | Out-Default
        displayName: 'Artifact Check: Output Gate Variable'
        condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

      - task: AzurePowerShell@5
        displayName: 'Delete resource group: ${{ parameters.resourceGroup }}'
        inputs:
          azureSubscription: 'Azure Baking Images'
          ScriptType: InlineScript
          Inline: |
            Write-Host Deleting Resource Group ${{ parameters.resourceGroup }}
            Remove-AzResourceGroup -Name ${{ parameters.resourceGroup }} -Force -ErrorAction SilentlyContinue
          errorActionPreference: silentlyContinue
          azurePowerShellVersion: LatestVersion
        condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

      # - task: AzureResourceManagerTemplateDeployment@3
      #   inputs:
      #     deploymentScope: 'Resource Group'
      #     azureResourceManagerConnection: $(ConnectedServiceName)
      #     subscriptionId: '739c4e86-bd75-4910-8d6e-d7eb23ab94f3'
      #     action: 'DeleteRG'
      #     resourceGroupName: ${{ parameters.resourceGroup }}

      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'Deploy ARM Template'
        inputs:
          azureResourceManagerConnection: $(ConnectedServiceName)
          subscriptionId: '739c4e86-bd75-4910-8d6e-d7eb23ab94f3'
          resourceGroupName: ${{ parameters.resourceGroup }}
          location: 'Australia East'
          csmFile: $(Pipeline.Workspace)/_lansa_azure_quickstart_templates/lansa-vmss-windows-autoscale-sql-database/mainTemplate.json
          overrideParameters: -osName "$(Gate.osName)" -stackName "$(Gate.VersionClean)" -imageId "$(Gate.ImageUrl)" -lansaVersion "${{ parameters.lansaVersion }}" -imageSource "${{ parameters.imageSource }}" -msiURL "${{ parameters.msiURL }}" -certificateBase64Encoded "$(certificateBase64Encoded)" -certificatePassword "$(certificatePassword)" -databaseLogin "$(databaseLogin)" -databaseLoginPassword "$(databaseLoginPassword)" -adminUsername "$(adminUsername)" -adminPassword "$(adminPassword)" -webUsername "$(webUsername)" -webPassword "$(webPassword)" -gitBranch "debug/paas" -agpublicIpSku "Standard" -agpublicIpAllocationMethod "Static" $(Collation_JPN)
          deploymentName: CustomTestTemplate
          deploymentOutputs: deploymentOutput
          addSpnToEnvironment: true
        condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

      - task: maikvandergaag.maikvandergaag-azurergtag.azurergtag.azurergtag@1
        displayName: 'Azure Resource Group Tagging'
        inputs:
          ConnectedServiceName: $(ConnectedServiceName)
          ResourceGroupName: ${{ parameters.resourceGroup }}
          Key: Usage
          Value: 'test-temp'
        continueOnError: true
        condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

      - powershell: |
          # Print the Deployment Output
          Write-Host "$(deploymentOutput)" | out-default | Write-Verbose
        displayName: 'Print Deployment Output'
        condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

      - task: PowerShell@2
        displayName: 'Test ARM Deployment: URL Tests'
        inputs:
          targetType: filePath
          filePath: '$(Pipeline.Workspace)/_robe070_cookbooks/scripts/azure_url_tests.ps1'
          arguments: -deploymentOutput '$(deploymentOutput)'
        condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))

      - task: AzurePowerShell@5
        displayName: 'Azure PowerShell: Test Image Version'
        env:
          RESOURCEGROUP: ${{ parameters.resourceGroup }}
        inputs:
          azureSubscription: 'Azure Baking Images'
          ScriptPath: '$(Pipeline.Workspace)/_robe070_cookbooks/scripts/azure_test_image_version.ps1'
          ScriptArguments: -SkuName "$(Gate.Sku)" -deploymentOutput '$(deploymentOutput)'
          azurePowerShellVersion: LatestVersion
        condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))


      - task: AzureResourceManagerTemplateDeployment@3
        displayName: 'Delete ResourceGroup'
        inputs:
          azureResourceManagerConnection: $(ConnectedServiceName)
          subscriptionId: '739c4e86-bd75-4910-8d6e-d7eb23ab94f3'
          action: DeleteRG
          resourceGroupName: ${{ parameters.resourceGroup }}
        continueOnError: true
        condition: and(succeeded(), eq(variables['Gate.IsEnabled'], 'True'))